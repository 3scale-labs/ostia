version: 2.1

orbs:
  openshift: redhat-3scale/okd@dev:latest

executors:
  go:
    docker:
      - image: circleci/golang:1.12.5
        environment:
          OPERATOR_SDK_VERSION: 0.8.1
    working_directory: /go/src/github.com/3scale/ostia

commands:
  restore-cache:
    description: "Restore cache"
    steps:
      - run:
          name: "Fix /go/bin permissions"
          command: |
            sudo chown -vf circleci:circleci /go/{src,bin}
      - restore_cache:
          keys:
            - v2-ostia-vendor-{{ arch }}-sdk-0.8.1-{{ checksum "ostia-operator/Gopkg.lock" }}
            - v2-ostia-vendor-{{ arch }}-sdk-0.8.1-{{ .Branch }}

  attach-workspace:
    steps:
      - run:
          name: Preparing workspace directory
          command: |
            sudo rm -rf /go
            sudo mkdir -p /go
            sudo chown -vf circleci:circleci /go
          working_directory: /
      - attach_workspace:
          at: /go

jobs:

  install:
    executor: go
    steps:
      - checkout
      - restore-cache
      - run:
          name: Install dependencies
          working_directory: ostia-operator
          command: |
            which dep || (curl --fail -L https://raw.githubusercontent.com/golang/dep/master/install.sh | sh)
            which operator-sdk || (curl --fail -L https://github.com/operator-framework/operator-sdk/releases/download/v${OPERATOR_SDK_VERSION}/operator-sdk-v${OPERATOR_SDK_VERSION}-x86_64-linux-gnu -o /go/bin/operator-sdk; chmod +x /go/bin/operator-sdk)

            dep check || dep ensure -v

            go version | cut -d' ' -f 3 > /go/version
      - save_cache:
          key: v2-ostia-vendor-{{ arch }}-sdk-0.8.1-{{ checksum "ostia-operator/Gopkg.lock" }}
          paths:
            - "/go/src/github.com/3scale/ostia/ostia-operator/vendor"
            - "/go/pkg"
            - "/go/bin"
            - "/go/version"
      - persist_to_workspace:
          root: /go
          paths:
            - bin
            - src
            - version

  test:
    executor: go
    steps:
      - attach-workspace
      - run:
          name: Run unit tests
          working_directory: ostia-operator
          command: |
            make unit

  build:
    executor: go
    steps:
      - attach-workspace
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build ostia-operator
          working_directory: ostia-operator
          command: |
              make build NAMESPACE=172.30.1.1:5000/openshift VERSION=test
      - run:
          name: Sharing requirements to downstream job
          command: |
            mkdir -p /go/tmp/
            docker save -o /go/tmp/ostia-image.tar 172.30.1.1:5000/openshift/ostia-operator:test

      - persist_to_workspace:
          root: /go
          paths:
            - tmp

  e2e:
    executor: openshift/machine
    working_directory: /go/src/github.com/3scale/ostia
    environment:
      IMAGE: 172.30.1.1:5000/openshift/ostia-operator:test
      GOROOT: /usr/local/go
    steps:
      - attach-workspace

      - run:
          name: "Install go"
          working_directory: /tmp
          command: |
            export VERSION=$(cat /go/version)
            sudo rm -vrf "$GOROOT"
            sudo mkdir -vp "$GOROOT"
            curl --fail -L https://dl.google.com/go/${VERSION}.linux-amd64.tar.gz | sudo tar -xzv --strip-components=1 -C "$GOROOT"

      - openshift/install:
          router_reload_interval: 1
          router_log_level: debug
      - openshift/observe
      - run:
          name: Unpack and push ostia-operator to internal registry
          command: |
            docker load -i ostia-image.tar
            oc whoami -t | docker login --username developer --password-stdin 172.30.1.1:5000
            docker push "${IMAGE}"
            docker tag "${IMAGE}" quay.io/3scale/ostia-operator:latest
          working_directory: /go/tmp

      - run:
          name: Run operator-sdk e2e tests
          working_directory: ostia-operator
          command: |
            export PATH="/go/bin:$PATH" GOPATH=/go
            make e2e IMAGE="${IMAGE}"

      - openshift/status

workflows:
  version: 2
  build_and_test_integration:
    jobs:
      - install
      - test:
          requires:
            - install
      - build:
          requires:
            - install
      - e2e:
          requires:
            - build
